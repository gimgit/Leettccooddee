WITH IN_DATE_RANGE AS (
    SELECT
        *,
        RANK()
            OVER (PARTITION BY PRODUCT_ID ORDER BY CHANGE_DATE DESC)
            AS RN
    FROM PRODUCTS
    WHERE CHANGE_DATE <= '2019-08-16'
)

SELECT
    PRODUCT_ID,
    NEW_PRICE AS PRICE
FROM IN_DATE_RANGE
WHERE RN = 1
UNION
SELECT
    PRODUCT_ID,
    10 AS PRICE
FROM PRODUCTS
WHERE PRODUCT_ID NOT IN (
    SELECT PRODUCT_ID
    FROM IN_DATE_RANGE
)